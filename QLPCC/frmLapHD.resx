<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgYAAAAAABIBwAAFgAAACgAAAAYAAAAMAAAAAEAGAAAAAAAwAYAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGRk+OTUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+OTUh
        JSc3RUYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAA6XGAMhLELO1QNDQ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6XGAWXoIMhLEMhLENDQ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACki3pOLhxOLhxOLhxOLhxOLhxOLhxOLhxOLhxOLhxOLhwMhLEVxPsBpeYMhLENDQ1OLhxOLhwA
        AAAAAAAAAAAAAAAAAAAAAACki3rv5+Oki3qki3qki3qki3qki3qki3qki3qki3qki3oMhLGX5/sVxPsB
        peYMhLENDQ1OLhwAAAAAAAAAAAAAAAAAAAAAAACki3ry7env5+Pt497q4Nnn3NXl2NDh1MzJtandzsXa
        ysDYxbsMhLGX5/sVxPsBpeYMhLENDQ0AAAAAAAAAAAAAAAAAAAAAAACki3r28/Dz7uvw6ubu5uHr4dzp
        3dfm2tPJtang0crdzsXaysDYxbsMhLGX5/sVxPsBpeYMhLENDQ0AAAAAAAAAAAAAAAAAAACki3r49/b2
        8/Dz7uvw6ubu5uHr4dzp3dfJtanj18/g0crdzsXaysDYxbsMhLGX5/sVxPsBpeYMhLENDQ0AAAAAAAAA
        AAAAAACki3r8+/r49/b28/Dz7uvw6ubu5uHr4dzJtanm2tPj18/g0crdzsXaysDYxbsMhLGX5/sMhLGc
        nJyAgIANDQ0AAAAAAAAAAACki3r////8+/r49/b28/Dz7uvw6ubu5uHJtanp3dfm2tPj18/g0crdzsXa
        ysDYxbsMhLHh4eHCwsKcnJwAC7YAAIIAAAAAAACki3r////////8+/r49/b28/Dz7uvw6ubJtanr4dzp
        3dfm2tPj18/g0crdzsXaysCki3qBkpfh4eEAHP8AC7YAAIIAAAAAAACki3r////////////8+/r49/b2
        8/Dz7uvJtanu5uHr4dzp3dfm2tPj18/g0crdzsWki3pOLhwAC7ZScPwAHP8AAIIAAAAAAACki3rJtanJ
        tanJtanJtanJtanJtanJtanJtanJtanJtanJtanJtanJtanJtanJtamki3pOLhwAAAAAC7YAAIIAAAAA
        AAAAAACki3r////////////////////+/vz7+vjJtan08O7y7env5+Pt497q4Nnn3NXl2NCki3pOLhwA
        AAAAAAAAAAAAAAAAAAAAAACki3r////////////////////////+/vzJtan39PP08O7y7env5+Pt497q
        4Nnn3NWki3pOLhwAAAAAAAAAAAAAAAAAAAAAAACki3r////////////////////////////Jtan7+vj3
        9PP08O7y7env5+Pt497q4Nmki3pOLhwAAAAAAAAAAAAAAAAAAAAAAACki3r/////////////////////
        ///////Jtan+/vz7+vj39PP08O7y7env5+Pt496ki3pOLhwAAAAAAAAAAAAAAAAAAAAAAACki3r/////
        ///////////////////////Jtan////+/vz7+vj39PP08O7y7env5+Oki3pOLhwAAAAAAAAAAAAAAAAA
        AAAAAACki3r////////////////////////////Jtan////////+/vz7+vj39PP08O7y7emki3pOLhwA
        AAAAAAAAAAAAAAAAAAAAAACki3r////////////////////////////Jtan////////////+/vz7+vj3
        9PP08O7y7elOLhwAAAAAAAAAAAAAAAAAAAAAAACki3qki3qki3qki3qki3qki3qki3qki3qki3qki3qk
        i3qki3qki3qki3qki3qki3qki3qki3oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A/8//AP/H
        /wD/4f8A/+D/AIAAHwCAAB8AgAAfAIAADwCAAAcAgAADAIAAAQCAAAEAgAABAIAAEwCAAB8AgAAfAIAA
        HwCAAB8AgAAfAIAAHwCAAB8AgAAfAP///wA=
</value>
  </data>
</root>
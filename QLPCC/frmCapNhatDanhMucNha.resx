<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnThoat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAYAAABWzo5XAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAALEwAA
        CxMBAJqcGAAAA1NJREFUOE+VlFtoFFcYx7+Z2dnNzO7ObLKzF/ceN7txNzbpxktqEqvGKFrZqGgqFRHs
        Qyn0wT4I9kIp1htKH0rFl/ahQh9sq6JSqAiW2moDrcH40MoiGi9JTNYkJmviNtVk/36JBCJstR44cDjz
        Pz/+8/2/cySaMRRej8/cKLI2iWRvNZQPGsuUtF2Et+/fQg+fyU9JVYE874X0w/vixvdNuvltRSBvUZ5I
        yk6bePZu3IfCuhoUWpM4lHS0CUSTHkj6LO46g00NmFg7D/mVcfw239OXUsU3n4EJJLyr0ncdRLgVLcP4
        xiSwuRoXG3xjIpFvUms/9qr/3uOVKQwvq8DD5gpgdSVuNAYnmjTT9mnYeoUOXhIIGaeKsZY5wIYq5NNx
        pJ3mb1jDLCKhVpV2XYg6kUsF8IBhw0ujeNQcQ/b1MDa5LPsWy7Tjd4nwt92CkRUVeNSSQKGlEtuDahuf
        d850LoZZfEQzjfXHDOQWz8YQz4cM7F8SwZ+GgiuyhIH6MPLsFm9U4suY3sWARNFa2kRq+dRCd24EdAzV
        RXC/PoLhRoYuiiC7IIjcsijGl8dwYq4zxwE1Pz9gkV5plenXnwx1ojcVxMDCMPrrwhhcVI6Rhtm4WOP+
        x5Bo8wu65Olni4lqP5Fp9IhqRnd1AFkGZueFkGPozwljJGQWXuCGIbJEjo9VavuWYz6uKehO+tA7148s
        A+/yHK4N4VLSlV9gFbf9tyuBTO+r9OMfHPMvihm3K7zojs9CV9yLTMRAb8KHnio/7lcHkUm6sVqTPioK
        26LQ1x0i4TIndD1g4FbYg2y5B3vcys11JdR+3rCiN8bgylm4l/DjTsKDt0rlz6f7aAq6xirsbreI6BBF
        ZFwOXPexA78LRz22UUWkpSwxlpjp5EmHBT0RN7qiXgzyVTkXcTw2CU87m+rs8tZMTQDX3Dr+0u0MKsNt
        lxPn3PZCUKZ3Ztgvicq0a68mD10LOjFQ7saHhuUK3zXbpEY9Wu3rHK2fg6vuMlx1sJvSUrQ7NaRKhANF
        ayBQ6jVF+Cptk05bRKqb1lj3h/RMHxe1U9PRaXcg49CQtko/sMD8v/plWsTPRuMqVTjxhWYePKUrExus
        0pnJmrwU5BmxQFX8cDXx3tQ/v8x4Aj6XRSs31kiNAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnCapNhat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAYAAABWzo5XAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAK9QAA
        CvUBbxZRbgAAAvpJREFUOE+tk2tIk2EUx4+l01xe0pbpdBpmOmdQE4KMLFGMSitTV9OSsGhDbencZlm6
        17luQklZfexLFN0Uv2QUBEF0cYhur7nugev2sSCjFeW/M1NafiiLHji8h/P8z+85z3mfEwCA/s8KIJLk
        MGraJFwQhakbUtoLT608U8CW2ZB2jAJJ+ouKc4I2c2QiOmMrUcjaSaBISt9+bRvOey7g7PA56K/uBIVS
        kr8qeB1RsIUjkvFoSBlR+EEO5vnJIklZ0rXBe/TBMbQNtmHzldIRPjlxQiFZxYUc4RyjP0hLFGZlWDNX
        ljsuZVBR92rvQbEFra5mlHQWjnBFY6DgNQyxE4Xa2K/zA0lKGdDIZvrxDcjizVCSr+/O8dpEM6wuI4o6
        8z7QdJoVkM3JfKBkL/eniW03a4N8+EAKjjZIa1SnkgRVu0LIOK4QFnYohNS6hJNl13O/Nrl2otG1HVuu
        5X9ZYFC0Z5xWCOkdCYLyhEJIO50oRAlSI195JlEEzc+9tBS2BxY+2YCWwRrYhqpgf6JnQDksA6UwDWyE
        2anBvodbYXGWo7ZPi6reTdDd12LJxYWg2bSIKJJSCrtzPtnd9WgRq9A6pMeBhzrY3BWwiAUwi6thdOWP
        +c1DWuwRNajrL0G1owg6RzGyujK+kcwHiqbU7Auy0R13k6HrnYea/iQYnEmo6k9ArZgJi3sFTEPLsFtU
        o5pj1QPx0PfJUXlPjorb8ci6HA6KITXx7WLn7CLXfCu9Sm0hj9JOnvQDNKw8TG8q+xSj+58vQeMzNbY5
        4r+lHaLXKt5j86TZyJMi0MvYenrE7UmeeBbh7MSwzRm3KJpLWRqH1GselsHskaH0TthHbsNi3o/20/n0
        kb8fsThK0TrJa3pDML0laBw0QrNI/vdzGU/Kysfktb4jWN8TKkQGRf182VMHyknZ+nS5t+dzOXq+lMPu
        zvlnkKr4pgLCMxVsL1TQ3Egc5e78MrRTq2oGRUdoqDNOT7fkbOxf4in3/ZR/XoFjg/SH9R2yuig0KYtY
        BAAAAABJRU5ErkJggg==
</value>
  </data>
</root>